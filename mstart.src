#include "zeus2d.def"
c=======================================================================
c/////////////////////////////  SUBROUTINE MSTART  \\\\\\\\\\\\\\\\\\\\\
c
      subroutine mstart
c
c  PURPOSE:  Starts a run.
c
c  EXTERNALS: SETUP, MGET, RESTART
c
c  LOCALS:
c-----------------------------------------------------------------------
      implicit NONE
#include "root.h"
      integer irestart
c
      integer incr,strtoi
      external setup, mget, restart, strtoi
      namelist /rescon/ irestart,tdump,dtdump,id,resfile
      namelist /iocon/ thdf,dthdf,thist,dthist,tusr,dtusr
c\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\///////////////////////////////
c=======================================================================
c
      open(unit=1,file='z2dinput',status='old')
      open(unit=2,file='zeuslp'  ,status='unknown')
c
c------------------------  RESTART CONTROL  ----------------------------
c
c  irestart: set to one for calculation restarted from restart dump
c  tdump: time of last restart dump
c  dtdump: time between restart dumps
c  id: character*2 tag attended to filenames to identify run
c  resfile: name of restart file to restart from
c
      irestart = 0
       tdump = 0.0
      dtdump = 0.0
      id     = 'aa'
      resfile= 'res000aa'
      read (1,rescon)
      write(2,rescon)
c
      if (irestart .eq. 0) then
        call setup
      else
        call mget(resfile)
		print *,"We are restarting"
#ifdef PYHYDRO
		print *,"We will be reading in a heating/cooling file"
#endif 
        nwarn = 0
        ifsen = 0
        call restart
      endif
C D. Proga , 17, Sept. 2002
      tdump=0. 
C

c
c------------------------  I/O CONTROL ---------------------------------
c
c  thdf: time of last HDF dump
c  dthdf: time between HDF dumps
c  thist: time of last history dump
c  dthist: time between history dumps
c  tusr: time of last user dump
c  dtusr: time between user dumps
c
      if (irestart .eq. 0) then
         thdf  = 0.0
        dthdf  = 0.0
         thist = 0.0
        dthist = 0.0
         tusr  = 0.0
        dtusr  = 0.0
      endif
      read (1,iocon)
      write(2,iocon)
c
      if (irestart .eq. 0) then
        write(resfile,"(a3,i3.3,a2)") 'res',0,id
        write(hdffile,"(a3,i3.3,a2)") 'hdf',0,id
        write(hstfile,"(a3,i3.3,a2)") 'hst',0,id
        write(usrfile,"(a3,i3.3,a2)") 'usr',0,id
      else
        incr = strtoi(resfile,4,6) + 1
        write(resfile,"(a3,i3.3,a2)") 'res',incr,id
        incr = strtoi(hdffile,4,6) + 1
        write(hdffile,"(a3,i3.3,a2)") 'hdf',incr,id
        incr = strtoi(hstfile,4,6) + 1
        write(hstfile,"(a3,i3.3,a2)") 'hst',incr,id
        incr = strtoi(usrfile,4,6) + 1
        write(usrfile,"(a3,i3.3,a2)") 'usr',incr,id
      endif
c
c  Close unit=1 (input deck).  Unit=2 (zeuslp) is kept open throughout
c  entire run to accept warning messages.  It is closed in zeus2d.src
c
      close(unit=1)
c
      return
      end
